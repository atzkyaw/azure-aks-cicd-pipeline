trigger:
  branches:
    include:
      - main

variables:
  - group: aks-variables

stages:

- stage: Testingconnection
  displayName: Deploy to Dev using Helm
  jobs:
  - job: HelmDeploy
    displayName: Helm Deploy to Dev AKS
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          export AKS_CLUSTER_NAME="$(aksCluster)"
          export RESOURCE_GROUP="$(aksResourceGroup)"
          echo "AKS Cluster: $AKS_CLUSTER_NAME"
          echo "Resource Group: $RESOURCE_GROUP"
          az aks get-credentials --resource-group "$RESOURCE_GROUP" --name "$AKS_CLUSTER_NAME" --overwrite-existing
          kubectl get nodes
          kubectl get pods --all-namespaces

- stage: Build
  displayName: Build and Push to ACR
  jobs:
  - job: Build
    displayName: Build and Push Docker Image
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: 'restore'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: 'build'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: Publish
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)'

    - task: Docker@2
      displayName: Docker Build and Push to ACR
      inputs:
        containerRegistry: 'ACR-ServiceConnection'  # <-- now uses the correct Docker Registry connection
        repository: 'myappv2'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: |
          $(Build.BuildId)
          


